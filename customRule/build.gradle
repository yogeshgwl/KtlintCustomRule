apply plugin: 'java-library'
apply plugin: 'kotlin'

repositories {
    jcenter()
}

configurations {
    ktlint
}
dependencies {
    implementation "com.pinterest.ktlint:ktlint-core:0.36.0"

    //implementation project(":ktlint-core")
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //compileOnly "com.pinterest:ktlint:0.36.0"
    //testImplementation "com.pinterest:ktlint-core:0.36.0"
    //ktlint "com.github.shyiko:ktlint:0.29.0"

  //  compileOnly "com.github.shyiko.ktlint:ktlint-core:0.29.0"
    testImplementation "org.assertj:assertj-core:3.14.0"
   // testImplementation "com.github.shyiko.ktlint:ktlint-core:0.29.0"
   // testImplementation "com.github.shyiko.ktlint:ktlint-test:0.29.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task ktlint(type: JavaExec, dependsOn: classes) {
    main = "com.pinterest.ktlint.Main"
    // adding compiled classes to the classpath so that ktlint would validate project's sources
    // using its own ruleset (in other words to dogfood)
    classpath = configurations.ktlint + sourceSets.main.output
    args '--debug', 'src/**/*.kt'
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    // adding compiled classes to the classpath so that ktlint would validate project's sources
    // using its own ruleset (in other words to dogfood)
    classpath = configurations.ktlint + sourceSets.main.output
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

buildscript {
    ext.kotlin_version = '1.3.61'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.yogeshtatwalgwl'